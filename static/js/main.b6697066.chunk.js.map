{"version":3,"sources":["component/Chart.js","App.js","reportWebVitals.js","index.js"],"names":["data","Aylar","Değişim","Chart","className","syncId","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","fill","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAOMA,EAAO,CACT,CACEC,MAAO,UACPC,oBAAS,IAEX,CACED,MAAO,UACPC,qBAAU,KAEZ,CACED,MAAO,UACPC,oBAAS,IAEX,CACED,MAAO,UACPC,oBAAS,IAEX,CACED,MAAO,UACPC,qBAAU,GAEZ,CACED,MAAO,UACPC,oBAAS,KAEX,CACED,MAAO,UACPC,qBAAU,IAEZ,CACED,MAAO,UACPC,oBAAS,KAEX,CACED,MAAO,UACPC,qBAAU,KAEZ,CACED,MAAO,UACPC,oBAAS,GAEX,CACED,MAAO,UACPC,oBAAS,KAEX,CACED,MAAO,UACPC,qBAAU,IAEZ,CACED,MAAO,UACPC,oBAAS,IAEX,CACED,MAAO,UACPC,qBAAU,KAEZ,CACED,MAAO,UACPC,oBAAS,KAEX,CACED,MAAO,UACPC,qBAAU,KAEZ,CACED,MAAO,UACPC,oBAAS,KAEX,CACED,MAAO,UACPC,oBAAS,GAEX,CACED,MAAO,UACPC,qBAAU,IAEZ,CACED,MAAO,UACPC,qBAAU,KAEZ,CACED,MAAO,UACPC,oBAAS,KAEX,CACED,MAAO,UACPC,qBAAU,KA8BDC,MA1Bf,WAEI,OACI,sBAAKC,UAAU,YAAf,UACI,8DACA,cAAC,IAAD,UACI,eAAC,IAAD,CAEAJ,KAAMA,EACNK,OAAO,QACPC,OAAQ,CACJC,IAAK,GAAIC,MAAO,GAAIC,KAAM,EAAGC,OAAQ,GALzC,UAQI,cAAC,IAAD,CAAeC,gBAAgB,QAC/B,cAAC,IAAD,CAAOC,QAAQ,UACf,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAMC,KAAK,WAAWD,QAAQ,oBAAUE,OAAO,UAAUC,KAAK,YAC9D,cAAC,IAAD,aC1GLC,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACI,cAAC,EAAD,OCMOa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b6697066.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Brush,\n  AreaChart, Area,ResponsiveContainer\n} from 'recharts';\n\nconst data = [\n    {\n      Aylar: \"2019 01\",\n      Değişim: 0.5\n    },\n    {\n      Aylar: \"2019 02\",\n      Değişim: -1.6\n    },\n    {\n      Aylar: \"2019 03\",\n      Değişim: 26\n    },\n    {\n      Aylar: \"2019 04\",\n      Değişim: 28\n    },\n    {\n      Aylar: \"2019 05\",\n      Değişim: -8\n    },\n    {\n      Aylar: \"2019 06\",\n      Değişim: 3.7\n    },\n    {\n      Aylar: \"2019 07\",\n      Değişim: -19\n    },\n    {\n      Aylar: \"2019 08\",\n      Değişim: 1.1\n    },\n    {\n      Aylar: \"2019 09\",\n      Değişim: -1.9\n    },\n    {\n      Aylar: \"2019 10\",\n      Değişim: 1\n    },\n    {\n      Aylar: \"2019 11\",\n      Değişim: 3.6\n    },\n    {\n      Aylar: \"2019 12\",\n      Değişim: -0.7\n    },\n    {\n      Aylar: \"2020 01\",\n      Değişim: 0.8\n    },\n    {\n      Aylar: \"2020 02\",\n      Değişim: -2.1\n    },\n    {\n      Aylar: \"2020 03\",\n      Değişim: 1.9\n    },\n    {\n      Aylar: \"2020 04\",\n      Değişim: -3.7\n    },\n    {\n      Aylar: \"2020 05\",\n      Değişim: 5.8\n    },\n    {\n      Aylar: \"2020 06\",\n      Değişim: 0\n    },\n    {\n      Aylar: \"2020 07\",\n      Değişim: -0.5\n    },\n    {\n      Aylar: \"2020 08\",\n      Değişim: -3.5\n    },\n    {\n      Aylar: \"2020 09\",\n      Değişim: 3.2\n    },\n    {\n      Aylar: \"2020 10\",\n      Değişim: -0.1\n    }\n  ];\n\nfunction Chart() {\n\n    return (\n        <div className=\"container\">\n            <h4>Tüketici Güven Endeksi</h4>\n            <ResponsiveContainer>\n                <LineChart\n\n                data={data}\n                syncId=\"anyId\"\n                margin={{\n                    top: 10, right: 30, left: 0, bottom: 0,\n                }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"Aylar\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Line type=\"monotone\" dataKey=\"Değişim\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                    <Brush />\n                </LineChart>\n            </ResponsiveContainer>\n      </div>\n    )\n}\n\nexport default Chart","import './App.css';\nimport Chart from './component/Chart';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Chart />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}